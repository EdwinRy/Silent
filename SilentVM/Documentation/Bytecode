Halt - stops the execution
Goto X - moves the current instruction to X

Call X - saves base and stack pointer and performs a subroutine call at X
Return - revert pointers and return to calling adress
LoadDll
LoadDllFunc
FreeDll
CallDllFunc

Push1 - pushes 1 byte onto the stack
Push2
Push4
Push8
PushX

Pop1 - remove 1 byte from the top of the stack
Pop2
Pop4
Pop8
PopX

Store1 X - move 1 byte from the top of the stack to baseptr + X
Store2
Store4
Store8
StoreX

Load1 X - moves 1 byte from baseptr + X to the top of the stack
Load2
Load4
Load8
LoadX

StoreGlobal1 - Same as Store but using global index
StoreGlobal2
StoreGlobal4
StoreGlobal8
StoreGlobalX

LoadGlobal1 - Same as Load but using global index
LoadGlobal2
LoadGlobal4
LoadGlobal8
LoadGlobalX

Alloc1 - Allocates 1 byte for an object and returns its index from gc
Alloc2
Alloc4
Alloc8
AllocX

LoadPtr1
LoadPtr2
LoadPtr4
LoadPtr8
LoadPtrX

StorePtr1 - to ptr at top of the stack stores 1 following byte on the stack 
StorePtr2 - 
StorePtr4 - 
StorePtr8 - 
StorePtrX - 
Free X - free object X
GetPtr X - returns pointer to data of object X

AddI1,
AddI2,
AddI4,
AddI8,
AddF4,
AddF8,

SubI1,
SubI2,
SubI4,
SubI8,
SubF4,
SubF8,

MulI1,
MulI2,
MulI4,
MulI8,
MulF4,
MulF8,

DivI1,
DivI2,
DivI4,
DivI8,
DivF4,
DivF8,

//Convert,
SmallerThan,
SmallerThanOrEqual,
LargerThan,
LargerThanOrEqual,
Equal,
NotEqual,

If,
IfNot,
And,
Or,
Xor,
Not