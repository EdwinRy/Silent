
(* ----------------------------- TOKENS ----------------------------- *)


<non-0-digit> ::= "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"

<digit> ::= "0" | <non-0-digit>

<digits> ::= <digit> {digit}

<float> ::= [<sign>] <digits> "." <digits>

<integer> ::= [<sign>] <digits>

<sign> ::= "+" | "-"

<namespace-name> ::= <identifier> {"::" <identifier>}

<type-name> ::= <identifier>
    | <namespace-name> "::" <identifier>

# <expression-lhs> ::= <identifier>
#     | <name> "." <identifier>

<expression-name> ::= <identifier> {"." <identifier>}

<function-name> ::= <identifier> {"::" <identifier>}

<primitive> ::= "int8" | "uint8" 
    | "int16" | "uint16" 
    | "int32" | "uint32" 
    | "int64" | "uint64"
    | "float32" | "float64"

<type-specifier> ::= <primitive> | <type-name>

<literal> ::= <integer> | <float> | <string>


(* ----------------------------- EXPRESSIONS ----------------------------- *)


<expression> ::= <assignment> | <function-call>

<function-call>

<assignment> ::= <left-hand-side> <assignment-operator> <conditional-expression>

<left-hand-side> ::= <expression-name> | <array-access>

<array-access> ::= <expression-name> "["<expression>"]"

<assignment-operator> ::= "=" | "+=" | "-=" | "*=" | "/="

<dimensions> ::= "[" "]" { "[" "]" }

<dimension-expression> ::= "["<expression>"]"

<dimension-expressions> ::= "["<expression>"]" {<dimension-expression>}

<object-creation> ::= "new" <type> "(" <arguments> ")"

<arguments> ::= <expression> { "," <expression> }

<conditional-expression> ::= 
    <logical-expression> {<conditional-operator> <logical-expression>}

<conditional-operator> ::= "||" | "&&"


<logical-expression> ::= <comparison-expression>
    | <logical-expression> <logical-operator> <comparison-expression>

<logical-operator> ::= "&" | "|" | "^"


<comparison-expression> ::= <shift-expression>
    | <comparison-expression> <comparison-operator> <shift-expression>

<comparison-operator> ::= "==" | "!=" | "<=" | ">="


<shift-expression> ::= <addition>
    | <shift-expression> <shift-operator> <addition>

<shift-operator> ::= "<<" | ">>"


<addition> ::= <multiplication>
    | <addition> <addition-operator> <multiplication>

<addition-operator> ::= "+" | "-"


<multiplication> ::= <factor> 
    | <multiplication> <multiplication-operator> <factor>

<multiplication-operator> ::= "*" | "/"

<factor> ::= <literal> | "(" <expression> ")" | <function-call>

<function-call> ::= <identifier>

<statement-expression> ::= <assignment>



(* ----------------------------- SCOPES ----------------------------- *)

<namespace-scope> ::= "{" <namespace-statements> "}"

<namespace-statements> ::= { <namespace-statement> }

<namespace-statement> ::= <function-declaration> | <type-declaration>

<local-scope> ::= "{" <local-statements> "}"

<local-statements> ::= { <local-statement> }

<local-statement> ::= <variable-declaration> | <expression> 

(* ----------------------------- TYPES ----------------------------- *)

(* ----------------------------- DECLARATIONS ----------------------------- *)

<program> ::= 
    { <namespace-declaration> | <function-declaration> | <type-declaration>}

<function-declaration> ::= 
    "function" [<function-properties>] <function-name> "(" [<parameters>] ")" 
    <local-scope>

<parameters> ::= <parameter> {"," <parameter>}

<parameter> ::= <type-specifier> <identifier>

<function-properties> ::= 

<variable-declaration> ::= <type-specifier> <identifier> ";"
    | <type-specifier> <variable-init>

<array-init>

<variable-init> ::= <expression> | <array-init>

<namespace-declaration> ::= 
    "namespace" <namespace-name> (<namespace-scope> | ";")

